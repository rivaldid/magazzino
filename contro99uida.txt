                  _            ___   ___        _     _       
                 | |          / _ \ / _ \      (_)   | |      
   ___ ___  _ __ | |_ _ __ __| (_) | (_) |_   _ _  __| | __ _ 
  / __/ _ \| '_ \| __| '__/ _ \__, |\__, | | | | |/ _` |/ _` |
 | (_| (_) | | | | |_| | | (_) |/ /   / /| |_| | | (_| | (_| |
  \___\___/|_| |_|\__|_|  \___//_/   /_/  \__,_|_|\__,_|\__,_|
                                                              
                                                              
------------------------------------------------------------------------


*fix nuovo mac: 
rigenerandolo dal programma di virtualizzazione si sara' creato 
nuovo nic eth1 in /etc/udev/rules.d/70-persistent-net.rules
quel mac lo inserisco in HWADDR in /etc/sysconfig/network-scripts/ifcfg-eth0
e /etc/udev/rules.d/70-persistent-net.rules stesso eliminando la riga 
relativa al nuovo nic e lasciando eth0 con il mac attuale

*fix repo baseline:
modifica baseurl /etc/yum.repos.d/baselinesec_6.2_x86_64.repo
baseurl = ftp://10.207.248.41/yum/rhel62/cache/x86_64/6Server/rhel-x86_64-server-6/getPackage/

*fix rpmnew
# find / -print | egrep "rpmnew"

*disable proxy
mv /etc/profile.d/proxy.csh /etc/profile.d/proxy.csh.bk
mv /etc/profile.d/proxy.sh /etc/profile.d/proxy.sh.bk

*fix proxy
[root@rto1dcvm181 /]# cat /etc/profile.d/proxy.sh
# proxy inizialization script (sh)
export no_proxy='.rete.poste'
export HTTP_PROXY='http://10.98.2.171:3128/'
export http_proxy=$HTTP_PROXY
export https_proxy=$HTTP_PROXY
export FTP_PROXY=$HTTP_PROXY
export ftp_proxy=$HTTP_PROXY

[root@rto1dcvm181 /]# cat /etc/profile.d/proxy.csh
# inizialization script (csh)
setenv HTTP_PROXY http://10.98.2.171:3128/
setenv FTP_PROXY http://10.98.2.171:3128/
setenv http_proxy http://10.98.2.171:3128/
setenv ftp_proxy http://10.98.2.171:3128/
setenv no_proxy .rete.poste

*fix warning timestamp
aggiunta della riga in mysqld in /etc/my.cnf: explicit_defaults_for_timestamp = 1

*fix MYSQL
yum install perl-DBI
manual download http://repo.mysql.com/mysql-community-release-el6-5.noarch.rpm
yum localinstall mysql-community-release-el6-5.noarch.rpm
fix proxy*
yum install mysql-community-server
disable proxy*
fix warning timestamp*
chmod 1777 /tmp
mysql_install_db
chown -R mysql:mysql /var/lib/mysql/
service mysqld start
mysql_secure_installation

*fix permessi su wwww
groupadd devs
usermod -a -G devs utente
getent group
chown -R root:devs /var/www/
chmod -R 775 /var/www/

*config apache: /etc/httpd/conf/httpd.conf
ServerAdmin
ServerName
AllowOverride All nella home del webserver (per eseguire .htaccess)

*config krb5
mv /etc/krb5.conf /etc/krb5.conf.bk
cat /etc/krb5.conf
[libdefaults]
 ticket_lifetime = 24000
 default_realm = RETE.POSTE
 dns_lookup_realm = false
 dns_lookup_kdc = false

[realms]
 RETE.POSTE = {
  kdc = 10.208.77.84
  kdc = 10.205.73.84
  #admin_server = 10.208.77.84
  admin_server = miretedc001.rete.poste
  default_domain = rete.poste
 }

[domain_realm]
 .rete.poste = RETE.POSTE
 rete.poste = RETE.POSTE

[appdefaults]
 pam = {
   debug = false
   ticket_lifetime = 36000
   renew_lifetime = 36000
   forwardable = true
   krb4_convert = false
 }

cat /etc/krb5.keytab
HTTP/10.98.2.181@RETE.POSTE

*pagine test
# cat /var/www/html/test.php
<?php
  phpinfo();
?>
# cat /var/www/html/.htaccess >> RENAMED web.conf
AuthType           Kerberos
AuthName           "immettere le credenziali rete.poste"
KrbMethodNegotiate off
KrbVerifyKDC       off
KrbAuthRealm       RETE.POSTE
Krb5Keytab         /etc/krb5.keytab
KrbSaveCredentials on
Require            valid-user

$ cat /etc/httpd/conf.d/web.conf
<Location "/">
AuthType           Kerberos
AuthName           "ACCOUNT RETE.POSTE"
KrbMethodNegotiate off
KrbVerifyKDC       off
KrbAuthRealm       RETE.POSTE
Krb5Keytab         /etc/krb5.keytab
KrbSaveCredentials on
Require            valid-user
RewriteEngine On
RewriteCond %{HTTPS} !=on
RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
</Location>

# cat /var/www/html/index.php
<!DOCTYPE html>
<html>
<body>
<h1>Benvenuto nel server di preproduzione!</h1>
<p>Ti sei autenticato come <?php echo $_SERVER['REMOTE_USER']; ?></p>
</body>
</html>

*mount cdrom RHEL6
mount -o loop /dev/cdrom1 /mnt/

*fix mbstring
source /etc/profile.d/proxy.sh.bk
wget ftp://fr2.rpmfind.net/linux/centos/6.6/updates/x86_64/Packages/php-mbstring-5.3.3-40.el6_6.x86_64.rpm
rpm -ivh php-mbstring-5.3.3-40.el6_6.x86_64.rpm
service httpd restart

*fix jakarta-taglibs-standard
yum install apache-tomcat-apis xalan-j2
wget ftp://mirror.switch.ch/pool/4/mirror/scientificlinux/6.3/i386/os/Packages/jakarta-taglibs-standard-1.1.1-11.4.el6.noarch.rpm
rpm -ivh jakarta-taglibs-standard-1.1.1-11.4.el6.noarch.rpm

*fix php5.3 to php5.4
source /etc/profile.d/proxy.sh.bk
rpm -Uvh https://mirror.webtatic.com/yum/el6/latest.rpm
yum remove php-common
yum install php54w php54w-mbstring php54w-pdo php54w-mysql
yum reinstall mod_auth_kerb
$ grep "date.timezone =" /etc/php.ini
date.timezone = Europe/Rome

*fix SSL
yum install mod_ssl java-1.8.0-openjdk
*** GARBAGE:
*** openssl req -new -newkey rsa:2048 -nodes -out rete.poste.crs -keyout rete.poste.key -subj '/C=IT/ST=Piemonte/L=Torino/O=Poste Italiane/CN=rto1dcvm181.rete.poste'
*** openssl req -new -newkey rsa:2048 -nodes -out rto1dcvm181.rete.poste.csr -keyout rto1dcvm181.rete.poste.key -subj "/C=IT/O=Poste Italiane/CN=rto1dcvm181.rete.poste"
*** www.startssl.com
*sha-2 (256)
sudo cp ca.crt /etc/pki/tls/certs/
sudo cp ca.key /etc/pki/tls/private/
sudo cp ca.csr /etc/pki/tls/private/
sudo restorecon -RvF /etc/pki
sudo vim /etc/httpd/conf.d/ssl.conf
sudo iptables -A INPUT -p tcp --dport 443 -j ACCEPT
sudo /sbin/service iptables save
sudo iptables -L -v
sudo httpd restart

*sha-1
openssl genrsa -out ca.key 2048
openssl req -new -key ca.key -out ca.csr
openssl x509 -req -days 365 -in ca.csr -signkey ca.key -out ca.crt

*sha-2 (256)
openssl req -x509 -nodes -sha256 -days 365 -newkey rsa:2048 -keyout ca2.key -out ca2.crt

*cgi-bin
vim /etc/httpd/conf/httpd.conf
<Directory "/var/www/cgi-bin">
    AllowOverride None
    #Options None
    Options +ExecCGI -Indexes
    AddHandler cgi-script .cgi .pl .py
    Order allow,deny
    Allow from all
</Directory>

*test hello world
$ cat /var/www/cgi-bin/hello.pl
#!/usr/bin/perl

# hello.pl -- my first perl script!

print "Content-type: text/html\n\n";

print <<"EOF";
<HTML>

<HEAD>
<TITLE>Hello, world!</TITLE>
</HEAD>

<BODY>
<H1>Hello, world!</H1>
</BODY>

</HTML>
EOF






BEGIN
/etc/hosts
/etc/sysconfig/network
/etc/sysconfig/network-scripts/ifcfg-eth0
fix nuovo mac*
passwd
useradd utente
passwd utente
usermod -g primogruppo utente
usermod -G secondogruppo utente
reboot
visudo e scommento %wheel ALL=(ALL) ALL

UPDATE
fix repo baseline*
mv /etc/yum.repos.d/cdrom.repo /etc/yum.repos.d/cdrom.repo.bk
yum repolist all
yum update
fix rpmnew*

INSTALL
yum install httpd -y
service httpd start
chkconfig httpd on
vim /etc/sysconfig/iptables
and add line -A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
service iptables restart
fix MYSQL*
chkconfig mysqld on
fix subscription-manager*

yum install php -y [no more needed!!!!]
service httpd restart
fix permessi su www*
yum install mod_auth_kerb krb5-workstation pam_krb5
config apache*
config krb5*
service httpd restart
pagine test*
yum install mutt man man-pages

PORTING DB
# yum install git
$ source /etc/profile.d/proxy.sh.bk
$ cat .gitconfig
[core]
        pager = less -r
        editor = vim
[format]
        pretty = format:'%C(bold blue)%h%Creset%C(bold yellow)%d%Creset: %C(bold red)%s%Creset - %C(bold magenta)%cn%Creset(%C(bold green)%cd%Creset)'

[alias]
        lg = log --graph --date=relative --all

[user]
        name = user
        email = user@mail.it

$ git clone https://rivaldid@bitbucket.org/rivaldid/magazzinodb.git
mysql> CREATE USER 'magazzino'@'localhost' IDENTIFIED BY 'magauser';
mysql> CREATE DATABASE magazzino;
mysql> GRANT ALL PRIVILEGES ON magazzino.* TO 'magazzino'@'localhost';
mysql> FLUSH PRIVILEGES;
fix1 Warning: Using a password on the command line interface can be insecure
$ mysql_config_editor set --login-path=local --host=localhost --user=magazzino --password
$ mysql --login-path=local -D magazzino
$ grep magazzino .bash_profile
export connect_db_magazzino="mysql --login-path=local -D magazzino"
fix2 Warning: Using a password on the command line interface can be insecure
$ cat html/cgi-bin/.my.cnf
[mysql]
user=magazzino
password=magauser

PORTING WEBAPP
$ git clone https://rivaldid@bitbucket.org/rivaldid/magazzino.git
# source /etc/profile.d/proxy.sh.bk
# yum install php-mysql [no more needed!!!!]
# service httpd restart
$ grep "date.timezone =" /etc/php.ini
date.timezone = Europe/Rome
# service httpd restart
fix mbstring* [no more needed!!!!]
fix php5.3 to php5.4*
fix SSL*
cgi-bin*
test hello world*

JAVA
yum update
fix jakarta-taglibs-standard*
yum install tomcat6 tomcat6-webapps tomcat6-admin-webapps
chkconfig tomcat6 on
service tomcat6 start








________________________________________________________________________
*fix mysql_secure_installation
[root@server1 ~]# mysql_secure_installation
/usr/bin/mysql_secure_installation: line 379: find_mysql_client: command not found

NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB
      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!

In order to log into MariaDB to secure it, we'll need the current
password for the root user.  If you've just installed MariaDB, and
you haven't set the root password yet, the password will be blank,
so you should just press enter here.

Enter current password for root (enter for none): <--ENTER
OK, successfully used password, moving on...

Setting the root password ensures that nobody can log into the MariaDB
root user without the proper authorisation.

Set root password? [Y/n] 
New password: <--yourmariadbpassword
Re-enter new password: <--yourmariadbpassword
Password updated successfully!
Reloading privilege tables..
 ... Success!


By default, a MariaDB installation has an anonymous user, allowing anyone
to log into MariaDB without having to have a user account created for
them.  This is intended only for testing, and to make the installation
go a bit smoother.  You should remove them before moving into a
production environment.

Remove anonymous users? [Y/n] <--ENTER
 ... Success!

Normally, root should only be allowed to connect from 'localhost'.  This
ensures that someone cannot guess at the root password from the network.

Disallow root login remotely? [Y/n] <--ENTER
 ... Success!

By default, MariaDB comes with a database named 'test' that anyone can
access.  This is also intended only for testing, and should be removed
before moving into a production environment.

Remove test database and access to it? [Y/n] <--ENTER
 - Dropping test database...
 ... Success!
 - Removing privileges on test database...
 ... Success!

Reloading the privilege tables will ensure that all changes made so far
will take effect immediately.

Reload privilege tables now? [Y/n] <--ENTER
 ... Success!

Cleaning up...

All done!  If you've completed all of the above steps, your MariaDB
installation should now be secure.

Thanks for using MariaDB!
[root@server1 ~]#

*fix mariadb character-set
cat /etc/my.cnf
[mysqld]
...
character-set-server=utf8

*remote windows shares
yum install samba-client samba-common cifs-utils
vim /etc/fstab
\\rto1y11c013\Dati\DC\REPORT\Export /mnt/REPORT cifs user,uid=500,rw,noauto,suid,credentials=/home/myuser/account_ad.txt 0 0
$ cat /home/vilardid/account_ad.txt
username=myuser
password=mypass





SETUP CENTOS7 rto1dcpm172.rete.poste
vim /etc/hosts
chkconfig network on
proxy*
yum update
yum upgrade
yum -y install vim links wget mutt git man man-pages man-pages-overrides deltarpm yum-utils unzip screen
reboot
localectl set-locale LANG=it_IT.utf8
yum install httpd php
echo -e "<?php\nphpinfo();\n?>"  > /var/www/html/info.php
yum -y install mariadb-server mariadb
systemctl start mariadb.service
systemctl enable mariadb.service
fix mysql_secure_installation*
yum -y install php-mysql php-gd php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-snmp php-soap curl curl-devel mod-ssl
yum -y install mod_auth_kerb krb5-workstation pam_krb5
config apache: ServerAdmin/ServerName + /etc/httpd/conf.d/web.conf
config krb5*

firewall-cmd --permanent --zone=public --add-service=http
firewall-cmd --permanent --zone=public --add-service=https
firewall-cmd --permanent --zone=public --add-port=443/tcp
firewall-cmd --zone=public --list-all
firewall-cmd --zone=public --list-port
firewall-cmd --reload

openssl genrsa -des3 -passout pass:x -out server.pass.key 2048
openssl rsa -passin pass:x -in server.pass.key -out server.key
rm server.pass.key
openssl req -new -key server.key -out server.csr
openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt

cp server.crt /etc/pki/tls/certs/
cp server.key /etc/pki/tls/private/
vim /etc/httpd/conf.d/ssl.conf
systemctl restart httpd.service

fix permessi su www*
porting db (no fixes)*
fix mariadb character-set*
porting webapp (solo git clone)*
fix1: PHP Warning:  date()
$ grep "date.timezone =" /etc/php.ini
date.timezone = Europe/Rome
fix2: PHP Warning:  fopen
chcon -t httpd_sys_rw_content_t /var/www/html/mysite/mydir -R
cgi-bin*
systemctl restart httpd.service
firewall-cmd --permanent --zone=public --add-port=3306/tcp
firewall-cmd --reload

yum install samba samba-client samba-common
mv /etc/samba/smb.conf /etc/samba/smb.conf.bak
cat /etc/samba/smb.conf
[global]
workgroup = WORKGROUP
server string = Samba Server %v
netbios name = centos
security = user
map to guest = bad user
dns proxy = no
#============================ Share Definitions ==============================
[Anonymous]
path = /samba/stagisti
browsable =yes
writable = yes
guest ok = yes
read only = no

firewall-cmd --permanent --zone=public --add-service=samba
firewall-cmd --reload

mkdir -p /samba/
systemctl enable smb.service
systemctl enable nmb.service
systemctl restart smb.service
systemctl restart nmb.service

cd /samba
chmod -R 0755 stagisti/
chown -R nobody:nobody stagisti/
chcon -t samba_share_t /samba/stagisti/
remote windows shares*

WEBUSER*
CREATE USER 'webreporting'@'%' IDENTIFIED BY 'webreporting';
GRANT SELECT ON reporting.WINWATCH TO 'webreporting'@'%';
GRANT SELECT ON reporting.SERCHIO TO 'webreporting'@'%';
FLUSH PRIVILEGES;

ELREPO REPOSITORY
- installazione
rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm
- rimozione
rpm -qf /etc/yum.repos.d/elrepo.repo
yum remove elrepo-release
yum clean all

## RHEL/CentOS 7 64-Bit ##
# wget http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm
# rpm -ivh epel-release-7-5.noarch.rpm
yum-config-manager --save --setopt=updates.skip_if_unavailable=true
yum --enablerepo=epel info <PACKAGE>

yum install dnstop
dnstop enp63s0

*CNTLM
rpm -Uvh http://sourceforge.net/projects/cntlm/files/cntlm/cntlm%200.92.3/cntlm-0.92.3-1.x86_64.rpm
cp /etc/cntlm.conf /etc/cntlm.conf.bk
vim /etc/cntlm.conf
/etc/init.d/cntlmd start
chkconfig --add cntlmd
chkconfig cntlmd on
firewall-cmd --permanent --zone=public --add-port=3128/tcp
firewall-cmd --reload
/etc/init.d/cntlmd restart
service --status-all
NOTA: cntlm -v -c /etc/cntlm.conf
*fix Error creating a new PID file
mkdir /var/run/cntlm
chgrp cntlm /var/run/cntlm/
chmod g+w /var/run/cntlm/
systemctl start cntlm.service
less /var/log/messages | grep cntlm

*fix disable samba printing support
(failed to retrieve printer list: NT_STATUS_UNSUCCESSFUL)
cat /etc/samba/smb.conf
[global]
...
load printers = no
printing = bsd
printcap name = /dev/null
disable spoolss = yes

systemctl restart smb.service
systemctl restart nmb.service

*hardware support
yum install lm_sensors.x86_64
sensors-detect
yum install smartmontools
test: smartctl --test=long /dev/sda
smartctl -H /dev/sda
service smartd start
chkconfig smartd on
smartctl -H /dev/sda
smartctl -i /dev/sda
smartctl -s on /dev/sda
smartctl -c /dev/sda
smartctl -a /dev/sda
smartctl -a -d ata /dev/sda

